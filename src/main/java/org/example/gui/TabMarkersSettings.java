package org.example.gui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import org.apache.log4j.Logger;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.HashMap;
import java.util.Map;

import org.example.services.AnswerStorage;
import org.example.services.comPool.AnyPoolService;
import org.example.utilites.MyProperties;
import org.springframework.stereotype.Service;

import static org.example.utilites.MyUtilities.createDeviceByProtocol;


public class TabMarkersSettings extends JDialog {
    private static final Logger log = Logger.getLogger(TabMarkersSettings.class);
    private final AnyPoolService anyPoolService;
    HashMap<String, Integer> pairs = AnswerStorage.getDeviceTabPair();
    private JTextField TF_marker;
    private JComboBox CB_tabsList;
    private JButton BT_addPair;
    private JTextPane currList;
    private JTextPane textPane2;
    private JPanel mainPanel;
    private MyProperties properties;
    private StringBuilder sb = new StringBuilder();

    public TabMarkersSettings(MyProperties prop, AnyPoolService anyPoolService) {
        setModal(false);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setContentPane(mainPanel);
        updateList();
        updateTabList();
        properties = prop;
        BT_addPair.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                log.info("Нажата кнопка добавления пары 'адрес' - 'вкладка'");
                String ident = TF_marker.getText();
                if (ident.length() > 1)
                    AnswerStorage.registerDeviceTabPair(ident, CB_tabsList.getSelectedIndex());

                updateList();
                updateTabList();
                prop.setIdentAndTabBounding(AnswerStorage.getDeviceTabPair());
            }
        });
        this.anyPoolService = anyPoolService;
    }

    private void updateTabList() {
        CB_tabsList.removeAllItems();

        for (int i = 0; i < anyPoolService.getCurrentComClientsQuantity(); i++) {
            CB_tabsList.addItem("dev" + (i + 1));
        }
    }

    private void updateList() {
        sb.setLength(0);
        for (Map.Entry<String, Integer> stringIntegerEntry : pairs.entrySet()) {
            sb.append(stringIntegerEntry.getKey()).append(" перенаправляется на вкладку ").append(stringIntegerEntry.getValue()).
                    append(" (dev").append(stringIntegerEntry.getValue() + 1).append(")\r\n");
        }
        currList.setText(sb.toString());
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel1.add(scrollPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        currList = new JTextPane();
        scrollPane1.setViewportView(currList);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 3, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel2, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        TF_marker = new JTextField();
        panel2.add(TF_marker, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        CB_tabsList = new JComboBox();
        panel2.add(CB_tabsList, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        BT_addPair = new JButton();
        BT_addPair.setText("Add Pair");
        panel2.add(BT_addPair, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JScrollPane scrollPane2 = new JScrollPane();
        panel3.add(scrollPane2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textPane2 = new JTextPane();
        scrollPane2.setViewportView(textPane2);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
